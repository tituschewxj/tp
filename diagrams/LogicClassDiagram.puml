@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {
    package "Parser Classes" as ParserClasses{
    }

    Class "<<interface>>\nLogic" as Logic
    Class LogicManager

    package "Command Classes" as CommandPackage {
        package "Commands Utility Classes" as CommandsUtil {
        }
        Class XYZCommand
        Class CommandResult
        Class "{abstract}\nCommand" as Command
    }

    package "AutoComplete Classes" as AutoCompletePackage {
        package "AutoComplete Utility Classes" as AutoCompleteUtil {
        }
        class "<<interface>>\nAutoComplete" as AutoComplete
        class AutoCompleteXYZ
        note bottom of AutoCompleteXYZ: AutoCompleteXYZ = AutoCompleteCommand, \nAutoCompleteNusNetId, etc
    }
}

package Model {
    class HiddenModel #FFFFFF
}

package Storage {
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic
LogicManager -right->"1" ParserClasses
ParserClasses ..> XYZCommand : <<create>>
ParserClasses ...> AutoCompleteXYZ : <<create>>
XYZCommand .down.> CommandsUtil
AutoCompleteXYZ .left.> AutoCompleteUtil

XYZCommand -up-|> Command
AutoCompleteXYZ .up.|> AutoComplete
LogicManager .left.> Command : <<call>>
LogicManager .down..> AutoComplete : <<call>>

LogicManager --> Model
LogicManager ----> Storage

Command .[hidden]up.> Storage
Command .right.> Model
note bottom of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : <<create>>
@enduml
